{"version":3,"file":"static/js/189.4f05513e.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@remix-run/router/history.ts","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@remix-run/router/utils.ts","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/@remix-run/router/router.ts","../node_modules/react-router-dom/dom.ts","../node_modules/react-router-dom/index.tsx","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/components.tsx","../node_modules/react-router/index.ts","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/axios/lib/helpers/bind.js","../node_modules/axios/lib/utils.js","../node_modules/axios/lib/core/AxiosError.js","../node_modules/axios/lib/helpers/toFormData.js","../node_modules/axios/lib/helpers/AxiosURLSearchParams.js","../node_modules/axios/lib/helpers/buildURL.js","../node_modules/axios/lib/core/InterceptorManager.js","../node_modules/axios/lib/defaults/transitional.js","../node_modules/axios/lib/platform/browser/index.js","../node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","../node_modules/axios/lib/platform/browser/classes/FormData.js","../node_modules/axios/lib/platform/browser/classes/Blob.js","../node_modules/axios/lib/helpers/formDataToJSON.js","../node_modules/axios/lib/defaults/index.js","../node_modules/axios/lib/helpers/toURLEncodedForm.js","../node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/axios/lib/core/AxiosHeaders.js","../node_modules/axios/lib/core/transformData.js","../node_modules/axios/lib/cancel/isCancel.js","../node_modules/axios/lib/cancel/CanceledError.js","../node_modules/axios/lib/helpers/cookies.js","../node_modules/axios/lib/core/buildFullPath.js","../node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/axios/lib/helpers/combineURLs.js","../node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/axios/lib/helpers/speedometer.js","../node_modules/axios/lib/adapters/xhr.js","../node_modules/axios/lib/adapters/adapters.js","../node_modules/axios/lib/helpers/null.js","../node_modules/axios/lib/core/settle.js","../node_modules/axios/lib/helpers/parseProtocol.js","../node_modules/axios/lib/core/dispatchRequest.js","../node_modules/axios/lib/core/mergeConfig.js","../node_modules/axios/lib/env/data.js","../node_modules/axios/lib/helpers/validator.js","../node_modules/axios/lib/core/Axios.js","../node_modules/axios/lib/cancel/CancelToken.js","../node_modules/axios/lib/helpers/HttpStatusCode.js","../node_modules/axios/lib/axios.js","../node_modules/axios/lib/helpers/spread.js","../node_modules/axios/lib/helpers/isAxiosError.js"],"sourcesContent":["import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: any;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. May be either a URL or the pieces of a\n * URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import type { Location, Path, To } from \"./history\";\nimport { warning, invariant, parsePath } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on <Form>,\n * useSubmit(), <fetcher.Form>, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs {\n  request: Request;\n  params: Params;\n  context?: any;\n}\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\n/**\n * Route loader function signature\n */\nexport interface LoaderFunction {\n  (args: LoaderFunctionArgs): Promise<DataFunctionValue> | DataFunctionValue;\n}\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction {\n  (args: ActionFunctionArgs): Promise<DataFunctionValue> | DataFunctionValue;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: {\n    currentUrl: URL;\n    currentParams: AgnosticDataRouteMatch[\"params\"];\n    nextUrl: URL;\n    nextParams: AgnosticDataRouteMatch[\"params\"];\n    formMethod?: Submission[\"formMethod\"];\n    formAction?: Submission[\"formAction\"];\n    formEncType?: Submission[\"formEncType\"];\n    text?: Submission[\"text\"];\n    formData?: Submission[\"formData\"];\n    json?: Submission[\"json\"];\n    actionResult?: DataResult;\n    defaultShouldRevalidate: boolean;\n  }): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\ntype PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: number[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      // Incoming pathnames are generally encoded from either window.location\n      // or from router.navigate, but we want to match against the unencoded\n      // paths in the route definitions.  Memory router locations won't be\n      // encoded here but there also shouldn't be anything to decode so this\n      // should be a safe operation.  This avoids needing matchRoutes to be\n      // history-aware.\n      safelyDecodeURI(pathname)\n    );\n  }\n\n  return matches;\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/\\/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"/([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value: string) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nexport class ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  error?: Error;\n  internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  DataResult,\n  DeferredData,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DeferredResult,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  DetectErrorBoundaryFunction,\n  RedirectResult,\n  RouteData,\n  AgnosticRouteObject,\n  Submission,\n  SuccessResult,\n  AgnosticRouteMatch,\n  ShouldRevalidateFunction,\n  RouteManifest,\n  ImmutableRouteKey,\n  ActionFunction,\n  LoaderFunction,\n  V7_MutationFormMethod,\n  V7_FormMethod,\n  HTMLFormMethod,\n  MutationFormMethod,\n  MapRoutePropertiesFunction,\n} from \"./utils\";\nimport {\n  ErrorResponse,\n  ResultType,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key?: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key?: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_normalizeFormMethod: boolean;\n  v7_prependBasename: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: { requestContext?: unknown }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: { routeId?: string; requestContext?: unknown }\n  ): Promise<any>;\n}\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (state: RouterState): void;\n}\n\ninterface UseMatchesMatch {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: unknown;\n  handle: unknown;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UseMatchesMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized =\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    !initialMatches.some((m) => m.route.lazy) &&\n    // And we have to either have no loaders or have been provided hydrationData\n    (!initialMatches.some((m) => m.route.loader) || init.hydrationData != null);\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location);\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(newState: Partial<RouterState>): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n    subscribers.forEach((subscriber) => subscriber(state));\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    updateState({\n      ...newState, // matches, errors, fetchers go through as-is\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(\n        location,\n        newState.matches || state.matches\n      ),\n      preventScrollReset,\n      blockers,\n    });\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponse;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error,\n        },\n      });\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n\n      // Create a GET request for the loaders\n      request = new Request(request.url, { signal: request.signal });\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts: { replace?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace =\n          result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, { submission, replace });\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionData,\n      pendingError\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, {\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        ...(pendingActionData ? { actionData: pendingActionData } : {}),\n        ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach((rf) => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          fetcher ? fetcher.data : undefined\n        );\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState({\n        navigation: loadingNavigation,\n        ...(actionData\n          ? Object.keys(actionData).length === 0\n            ? { actionData: null }\n            : { actionData }\n          : {}),\n        ...(revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(state, redirect.result, { replace });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath })\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId,\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher = getSubmittingFetcher(submission, existingFetcher);\n    state.fetchers.set(key, fetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our action started, so that\n        // should take precedence over this redirect navigation.  We already\n        // set isRevalidationRequired so all loaders for the new route should\n        // fire unless opted out via shouldRevalidate\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        let loadingFetcher = getLoadingFetcher(submission);\n        state.fetchers.set(key, loadingFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n\n        return startRedirectNavigation(state, actionResult, {\n          submission,\n          isFetchActionRedirect: true,\n        });\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      { [match.route.id]: actionResult.data },\n      undefined // No need to send through errors since we short circuit above\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (fetchControllers.has(staleKey)) {\n          abortFetcher(staleKey);\n        }\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(state, redirect.result);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        ...(didAbortFetchLoads || revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher = getLoadingFetcher(\n      submission,\n      existingFetcher ? existingFetcher.data : undefined\n    );\n    state.fetchers.set(key, loadingFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(state, result);\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error,\n        },\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    let doneFetcher = getDoneFetcher(result.data);\n    state.fetchers.set(key, doneFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    state: RouterState,\n    redirect: RedirectResult,\n    {\n      submission,\n      replace,\n      isFetchActionRedirect,\n    }: {\n      submission?: Submission;\n      replace?: boolean;\n      isFetchActionRedirect?: boolean;\n    } = {}\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(\n      state.location,\n      redirect.location,\n      // TODO: This can be removed once we get rid of useTransition in Remix v2\n      {\n        _isRedirect: true,\n        ...(isFetchActionRedirect ? { _isFetchActionRedirect: true } : {}),\n      }\n    );\n    invariant(\n      redirectLocation,\n      \"Expected a location on the redirect navigation\"\n    );\n    // Check if this an absolute external redirect that goes to a new origin\n    if (ABSOLUTE_URL_REGEX.test(redirect.location) && isBrowser) {\n      let url = init.history.createURL(redirect.location);\n      let isDifferentBasename = stripBasename(url.pathname, basename) == null;\n\n      if (routerWindow.location.origin !== url.origin || isDifferentBasename) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let activeSubmission =\n      submission || getSubmissionFromNavigation(state.navigation);\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: redirect.location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else if (isFetchActionRedirect) {\n      // For a fetch action redirect, we kick off a new loading navigation\n      // without the fetcher submission, but we send it along for shouldRevalidate\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: getLoadingNavigation(redirectLocation),\n        fetcherSubmission: activeSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // If we have a submission, we will preserve it through the redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        activeSubmission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename\n        )\n      ),\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match && f.controller) {\n          return callLoaderOrAction(\n            \"loader\",\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            f.match,\n            f.matches,\n            manifest,\n            mapRouteProperties,\n            basename\n          );\n        } else {\n          let error: ErrorResult = {\n            type: ResultType.error,\n            error: getInternalRouterError(404, { pathname: f.path }),\n          };\n          return error;\n        }\n      }),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        loaderResults.map(() => request.signal),\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        fetchersToLoad.map((f) => (f.controller ? f.controller.signal : null)),\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key: string, routeId: string, error: any) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error,\n      },\n      fetchers: new Map(state.fetchers),\n    });\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => createUseMatchesMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request,\n    { requestContext }: { requestContext?: unknown } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n    }: { requestContext?: unknown; routeId?: string } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename,\n        { isStaticRequest: true, isRouteRequest, requestContext }\n      );\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(`${method}() call aborted`);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        undefined,\n        {\n          [boundaryMatch.route.id]: result.error,\n        }\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename,\n          { isStaticRequest: true, isRouteRequest, requestContext }\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(`${method}() call aborted`);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError,\n      activeDeferreds\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction isSubmissionNavigation(\n  opts: RouterNavigateOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId != null && relative !== \"path\") {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route.  When using relative:path,\n    // fromRouteId is ignored since that is always relative to the current\n    // location path\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getPathContributingMatches(contextualMatches).map((m) => m.pathnameBase),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: RouterNavigateOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponse;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionData?: RouteData,\n  pendingError?: RouteData\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : undefined;\n\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate:\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n        isRevalidationRequired ||\n        // Clicked the same link, resubmitted a GET form\n        currentUrl.pathname + currentUrl.search ===\n          nextUrl.pathname + nextUrl.search ||\n        // Search params affect all loaders\n        currentUrl.search !== nextUrl.search ||\n        isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some((m) => m.route.id === f.routeId)) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // Always revalidate if the fetcher was cancelled\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        defaultShouldRevalidate: isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: Parameters<ShouldRevalidateFunction>[0]\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  basename: string,\n  opts: {\n    isStaticRequest?: boolean;\n    isRouteRequest?: boolean;\n    requestContext?: unknown;\n  } = {}\n): Promise<DataResult> {\n  let resultType;\n  let result;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (handler: ActionFunction | LoaderFunction) => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    let abortPromise = new Promise((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([\n      handler({\n        request,\n        params: match.params,\n        context: opts.requestContext,\n      }),\n      abortPromise,\n    ]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let values = await Promise.all([\n          runHandler(handler),\n          loadLazyRouteModule(match.route, mapRouteProperties, manifest),\n        ]);\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, data: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  if (isResponse(result)) {\n    let status = result.status;\n\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(\n          new URL(request.url),\n          matches.slice(0, matches.indexOf(match) + 1),\n          basename,\n          true,\n          location\n        );\n      } else if (!opts.isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + location)\n          : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (opts.isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (opts.isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result,\n      };\n    }\n\n    let data: any;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match, controller } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`,\n  };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\";\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponse(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: DataResult[]\n): { result: RedirectResult; idx: number } | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return { result, idx: i };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    isResponse(obj.response) &&\n    (obj.type === ResultType.data || ResultType.error)\n  );\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signals: (AbortSignal | null)[],\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(\n        signal,\n        \"Expected an AbortSignal for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\n// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UseMatchesMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id] as unknown,\n    handle: route.handle as unknown,\n  };\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n    \" _hasFetcherDoneAnything \": true,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n    \" _hasFetcherDoneAnything \": true,\n  };\n  return fetcher;\n}\n//#endregion\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  ErrorResponse,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FetcherFormProps\n  extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\nexport interface FormProps extends FetcherFormProps {\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    let submit = useSubmit();\n    return <FormImpl {...props} submit={submit} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  submit: SubmitFunction | FetcherSubmitFunction;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      submit,\n      relative,\n      preventScrollReset,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"state\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n      });\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(\n  fetcherKey: string,\n  fetcherRouteId: string\n): FetcherSubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let { basename } = React.useContext(NavigationContext);\n\n  return React.useCallback<FetcherSubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      invariant(\n        fetcherRouteId != null,\n        \"No routeId available for useFetcher()\"\n      );\n      router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n      });\n    },\n    [router, basename, fetcherKey, fetcherRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n    (props, ref) => {\n      let submit = useSubmitFetcher(fetcherKey, routeId);\n      return <FormImpl {...props} ref={ref} submit={submit} />;\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: FetcherSubmitFunction;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No router available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  IDLE_BLOCKER,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation,\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  To,\n  LazyRouteFunction,\n  RelativeRoutingType,\n  RouterState,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n  useRoutesImpl,\n  useLocation,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  future?: FutureConfig;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: RouterState) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n          >\n            {state.initialized ? (\n              <DataRoutes routes={router.routes} state={state} />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: FutureConfig;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getPathContributingMatches(matches).map((match) => match.pathnameBase),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import * as React from \"react\";\nimport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  Blocker,\n  BlockerFunction,\n  Fetcher,\n  HydrationState,\n  JsonFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  PathPattern,\n  RedirectFunction,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  ShouldRevalidateFunction,\n  To,\n  InitialEntry,\n  LazyRouteFunction,\n  FutureConfig as RouterFutureConfig,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  resolvePath,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  AwaitProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps,\n  RouterProviderProps,\n  FutureConfig,\n} from \"./lib/components\";\nimport {\n  createRoutesFromChildren,\n  renderMatches,\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NavigateOptions,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigationType,\n  useNavigate,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useRouteId,\n  useLoaderData,\n  useMatches,\n  useNavigation,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutesImpl,\n} from \"./lib/hooks\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker as unstable_Blocker,\n  BlockerFunction as unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker as unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nfunction mapRouteProperties(route: RouteObject) {\n  let updates: Partial<RouteObject> & { hasErrorBoundary: boolean } = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null,\n  };\n\n  if (route.Component) {\n    if (__DEV__) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - \" +\n            \"`Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React.createElement(route.Component),\n      Component: undefined,\n    });\n  }\n\n  if (route.ErrorBoundary) {\n    if (__DEV__) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" +\n            \"`ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined,\n    });\n  }\n\n  return updates;\n}\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  mapRouteProperties as UNSAFE_mapRouteProperties,\n  useRouteId as UNSAFE_useRouteId,\n  useRoutesImpl as UNSAFE_useRoutesImpl,\n};\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    if (reducer(descriptor, name, obj) !== false) {\n      reducedDescriptors[name] = descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  value = +value;\n  return Number.isFinite(value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst isStandardBrowserEnv = (() => {\n  let product;\n  if (typeof navigator !== 'undefined' && (\n    (product = navigator.product) === 'ReactNative' ||\n    product === 'NativeScript' ||\n    product === 'NS')\n  ) {\n    return false;\n  }\n\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n})();\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\n const isStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  isStandardBrowserEnv,\n  isStandardBrowserWebWorkerEnv,\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\nconst DEFAULT_CONTENT_TYPE = {\n  'Content-Type': undefined\n};\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      if (!hasJSONContentType) {\n        return data;\n      }\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\nutils.freezeMethods(AxiosHeaders.prototype);\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs support document.cookie\n  (function standardBrowserEnv() {\n    return {\n      write: function write(name, value, expires, path, domain, secure) {\n        const cookie = [];\n        cookie.push(name + '=' + encodeURIComponent(value));\n\n        if (utils.isNumber(expires)) {\n          cookie.push('expires=' + new Date(expires).toGMTString());\n        }\n\n        if (utils.isString(path)) {\n          cookie.push('path=' + path);\n        }\n\n        if (utils.isString(domain)) {\n          cookie.push('domain=' + domain);\n        }\n\n        if (secure === true) {\n          cookie.push('secure');\n        }\n\n        document.cookie = cookie.join('; ');\n      },\n\n      read: function read(name) {\n        const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n        return (match ? decodeURIComponent(match[3]) : null);\n      },\n\n      remove: function remove(name) {\n        this.write(name, '', Date.now() - 86400000);\n      }\n    };\n  })() :\n\n// Non standard browser env (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return {\n      write: function write() {},\n      read: function read() { return null; },\n      remove: function remove() {}\n    };\n  })();\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.isStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = /(msie|trident)/i.test(navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","'use strict';\n\nimport utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport cookies from './../helpers/cookies.js';\nimport buildURL from './../helpers/buildURL.js';\nimport buildFullPath from '../core/buildFullPath.js';\nimport isURLSameOrigin from './../helpers/isURLSameOrigin.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport speedometer from '../helpers/speedometer.js';\n\nfunction progressEventReducer(listener, isDownloadStream) {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e\n    };\n\n    data[isDownloadStream ? 'download' : 'upload'] = true;\n\n    listener(data);\n  };\n}\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    let requestData = config.data;\n    const requestHeaders = AxiosHeaders.from(config.headers).normalize();\n    const responseType = config.responseType;\n    let onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      if (platform.isStandardBrowserEnv || platform.isStandardBrowserWebWorkerEnv) {\n        requestHeaders.setContentType(false); // Let the browser set it\n      } else {\n        requestHeaders.setContentType('multipart/form-data;', false); // mobile/desktop app frameworks\n      }\n    }\n\n    let request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      const username = config.auth.username || '';\n      const password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.set('Authorization', 'Basic ' + btoa(username + ':' + password));\n    }\n\n    const fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (platform.isStandardBrowserEnv) {\n      // Add xsrf header\n      const xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath))\n        && config.xsrfCookieName && cookies.read(config.xsrfCookieName);\n\n      if (xsrfValue) {\n        requestHeaders.set(config.xsrfHeaderName, xsrfValue);\n      }\n    }\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', progressEventReducer(config.onDownloadProgress, true));\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', progressEventReducer(config.onUploadProgress));\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(fullPath);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if(fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      if((adapter = utils.isString(nameOrAdapter) ? knownAdapters[nameOrAdapter.toLowerCase()] : nameOrAdapter)) {\n        break;\n      }\n    }\n\n    if (!adapter) {\n      if (adapter === false) {\n        throw new AxiosError(\n          `Adapter ${nameOrAdapter} is not supported by the environment`,\n          'ERR_NOT_SUPPORT'\n        );\n      }\n\n      throw new Error(\n        utils.hasOwnProp(knownAdapters, nameOrAdapter) ?\n          `Adapter '${nameOrAdapter}' is not available in the build` :\n          `Unknown adapter '${nameOrAdapter}'`\n      );\n    }\n\n    if (!utils.isFunction(adapter)) {\n      throw new TypeError('adapter is not a function');\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? thing.toJSON() : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","export const VERSION = \"1.4.0\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    let contextHeaders;\n\n    // Flatten headers\n    contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    contextHeaders && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n"],"names":["_construct","Parent","args","Class","isNativeReflectConstruct","Reflect","construct","bind","a","push","apply","instance","Function","setPrototypeOf","prototype","arguments","_wrapNativeSuper","_cache","Map","undefined","fn","toString","call","indexOf","TypeError","has","get","set","Wrapper","getPrototypeOf","this","constructor","Object","create","value","enumerable","writable","configurable","_iterableToArray","iter","Symbol","iterator","Array","from","_createForOfIteratorHelper","o","allowArrayLike","it","isArray","unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","err","normalCompletion","didErr","step","next","_e2","Action","arr","arrayLikeToArray","ResultType","PopStateEventType","createBrowserHistory","options","getUrlBasedHistory","window","globalHistory","_window$location","location","createLocation","pathname","search","hash","state","usr","key","to","createPath","invariant","message","Error","warning","cond","console","warn","getHistoryState","index","idx","current","_extends","parsePath","Math","random","substr","_ref","_ref$pathname","_ref$search","_ref$hash","charAt","path","parsedPath","hashIndex","searchIndex","getLocation","createHref","validateLocation","_options2","_options2$window","document","defaultView","_options2$v5Compat","v5Compat","history","action","Pop","listener","getIndex","handlePop","nextIndex","delta","createURL","base","origin","href","URL","replaceState","listen","addEventListener","removeEventListener","encodeLocation","url","Push","historyState","pushState","error","DOMException","name","assign","replace","Replace","go","immutableRouteKeys","Set","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","map","route","treePath","concat","_toConsumableArray","id","join","children","isIndexRoute","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","b","score","siblings","slice","every","compareIndexes","routesMeta","meta","childrenIndex","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","parentsMeta","flattenRoute","relativePath","caseSensitive","startsWith","joinPaths","computeScore","forEach","_route$path","includes","_step","_iterator","explodeOptionalSegments","exploded","segments","split","_segments","arrayWithHoles","nonIterableRest","first","rest","isOptional","endsWith","required","restExploded","result","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","some","filter","reduce","segment","test","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","params","pathnameBase","normalizePathname","pattern","_compilePath","paramNames","regexpSource","_","paramName","matcher","RegExp","compilePath","_compilePath2","_slicedToArray","captureGroups","memo","splatValue","decodeURIComponent","safelyDecodeURIComponent","decodeURI","toLowerCase","startIndex","nextChar","getInvalidPathError","char","field","dest","JSON","stringify","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","toPathname","routePathnameIndex","toSegments","shift","fromPathname","_ref4","_ref4$search","_ref4$hash","pop","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","AbortedDeferredError","_Error","_inherits","_super","_createSuper","_classCallCheck","_createClass","ErrorResponse","status","statusText","data","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","json","text","IDLE_FETCHER","IDLE_BLOCKER","proceed","reset","ABSOLUTE_URL_REGEX","defaultMapRouteProperties","hasErrorBoundary","Boolean","createRouter","init","routerWindow","isBrowser","createElement","isServer","detectErrorBoundary","inFlightDataRoutes","dataRoutes","future","v7_normalizeFormMethod","v7_prependBasename","unlistenHistory","subscribers","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialErrors","getInternalRouterError","_getShortCircuitMatch","getShortCircuitMatches","_defineProperty","router","pendingNavigationController","initialized","m","lazy","loader","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","loaderData","actionData","errors","fetchers","blockers","pendingAction","pendingPreventScrollReset","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeDeferreds","blockerFunctions","ignoreNextHistoryUpdate","updateState","newState","subscriber","completeNavigation","_location$state","_location$state2","isActionReload","isMutationMethod","_isRedirect","keys","mergeLoaderData","size","k","getSavedScrollPosition","navigate","_x2","_x3","_navigate","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","opts","normalizedPath","_normalizeNavigateOpt2","submission","currentLocation","nextLocation","userReplace","blockerKey","wrap","_context2","prev","abrupt","normalizeTo","fromRouteId","relative","normalizeNavigateOptions","shouldBlockNavigation","updateBlocker","startNavigation","pendingError","sent","stop","_x4","_x5","_x6","_startNavigation","_callee3","routesToUse","loadingNavigation","_error","_getShortCircuitMatch2","notFoundMatches","_route","request","pendingActionData","actionOutput","_yield$handleLoaders","shortCircuited","_context3","abort","startUninterruptedRevalidation","saveScrollPosition","overrideNavigation","cancelActiveDeferreds","isHashChangeOnly","AbortController","createClientSideRequest","signal","findNearestBoundary","handleAction","pendingActionError","getLoadingNavigation","Request","handleLoaders","fetcherSubmission","_x7","_x8","_x9","_x10","_x11","_handleAction","_callee4","actionMatch","boundaryMatch","_context4","interruptActiveLoads","getSubmittingNavigation","getTargetMatch","type","method","routeId","callLoaderOrAction","aborted","isRedirectResult","startRedirectNavigation","isErrorResult","isDeferredResult","_x12","_x13","_x14","_x15","_x16","_x17","_x18","_x19","_x20","_handleLoaders","_callee5","activeSubmission","_getMatchesToLoad","_getMatchesToLoad2","matchesToLoad","revalidatingFetchers","_updatedFetchers","abortPendingFetchRevalidations","_yield$callLoadersAnd","results","loaderResults","fetcherResults","redirect","fetcherKey","_processLoaderData","updatedFetchers","didAbortFetchLoads","shouldUpdateFetchers","_context5","getSubmissionFromNavigation","getMatchesToLoad","markFetchRedirectsDone","rf","fetcher","revalidatingFetcher","getLoadingFetcher","abortFetcher","controller","callLoadersAndMaybeResolveData","delete","findRedirect","add","processLoaderData","deferredData","subscribe","abortStaleFetchLoads","getFetcher","_handleFetcherAction","_callee6","requestMatches","_error2","existingFetcher","abortController","fetchRequest","originatingLoadId","actionResult","doneFetcher","loadingFetcher","revalidationRequest","loadId","loadFetcher","_getMatchesToLoad3","_getMatchesToLoad4","_yield$callLoadersAnd2","_processLoaderData2","_doneFetcher","_context6","setFetcherError","getSubmittingFetcher","getDoneFetcher","isFetchActionRedirect","staleKey","r","_handleFetcherLoader","_callee7","_doneFetcher2","_context7","resolveDeferredData","t0","_x33","_x34","_x35","_startRedirectNavigation","_callee8","_temp","_ref7","redirectLocation","isDifferentBasename","redirectHistoryAction","_context8","revalidate","_isFetchActionRedirect","_x36","_x37","_x38","_x39","_x40","_callLoadersAndMaybeResolveData","_callee9","currentMatches","fetchersToLoad","_context9","Promise","all","resolveDeferredResults","_cancelledDeferredRou","deleteFetcher","markFetchersDone","_step2","_iterator2","_step3","doneKeys","_iterator3","landedId","_step4","yeetedKeys","_iterator4","_step4$value","deleteBlocker","newBlocker","blocker","_ref2","entries","_entries","blockerFunction","predicate","cancelledRouteIds","dfd","cancel","getScrollKey","handle","createUseMatchesMatch","y","initialize","enableScrollRestoration","positions","getPosition","getKey","fetch","_normalizeNavigateOpt","_x21","_x22","_x23","_x24","_x25","_x26","handleFetcherAction","_x27","_x28","_x29","_x30","_x31","_x32","handleFetcherLoader","dispose","clear","getBlocker","_internalFetchControllers","_internalActiveDeferreds","_internalSetRoutes","newRoutes","prependBasename","contextualMatches","activeRouteMatch","_step5","_iterator5","hasNakedIndexQuery","normalizeFormMethod","isFetcher","body","isSubmissionNavigation","isValidMethod","searchParams","getInvalidBodyError","rawFormMethod","toUpperCase","stripHashFromPath","FormData","URLSearchParams","acc","_ref3","_ref12","String","parse","convertFormDataToSearchParams","convertSearchParamsToFormData","append","getLoaderMatchesUntilBoundary","boundaryId","boundaryMatches","findIndex","values","currentUrl","nextUrl","navigationMatches","currentLoaderData","currentMatch","isNew","isMissingData","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","currentParams","nextParams","defaultShouldRevalidate","isNewRouteInstance","fetcherMatches","fetcherMatch","currentPath","loaderMatch","arg","shouldRevalidate","routeChoice","loadLazyRouteModule","_x60","_x61","_x62","_loadLazyRouteModule","_callee15","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","staticRouteValue","isPropertyStaticallyDefined","_context16","_x63","_x64","_x65","_x66","_x67","_x68","_x69","_x70","_callLoaderOrAction","_callee16","resultType","onReject","runHandler","handler","_url","_url2","isSameBasename","contentType","_result$init","_result$init2","_context17","reject","abortPromise","race","context","requestContext","finish","isResponse","headers","isStaticRequest","protocol","isRouteRequest","response","statusCode","isDeferredData","deferred","Headers","_step6","_iterator6","_step6$value","_step7","_iterator7","_step7$value","processRouteLoaderData","foundError","loaderHeaders","_processRouteLoaderDa","_revalidatingFetchers","newLoaderData","_step8","mergedLoaderData","_iterator8","hasOwnProperty","reverse","find","_temp4","_ref13","errorMessage","resolveData","_x71","_x72","_x73","_x74","_x75","_x76","_resolveDeferredResults","_callee17","signals","_loop","_context19","isRevalidatingLoader","_context18","then","delegateYield","_x77","_x78","_x79","_resolveDeferredData","_callee18","unwrap","_context20","unwrappedData","getAll","v","pathMatches","createBrowserRouter","parseHydrationData","UNSAFE_mapRouteProperties","_window","__staticRouterHydrationData","deserializeErrors","serialized","_i","_entries$_i","val","__type","__subType","ErrorConstructor","stack","React","Link","ref","absoluteHref","onClick","reloadDocument","target","_objectWithoutPropertiesLoose","_excluded","UNSAFE_NavigationContext","isExternal","targetUrl","useHref","internalOnClick","replaceProp","useNavigate","useLocation","useResolvedPath","event","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","preventDefault","useLinkClickHandler","defaultPrevented","DataRouterHook","DataRouterStateHook","DataRouterContext","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","UNSAFE_invariant","_React$useContext","navigator","_useResolvedPath","joinedPathname","useIsomorphicLayoutEffect","cb","static","useDataRouterContext","UseNavigateStable","useCurrentRouteId","activeRef","useNavigateStable","dataRouterContext","_React$useContext3","routePathnamesJson","UNSAFE_getPathContributingMatches","useNavigateUnstable","OutletContext","useParams","routeMatch","_temp2","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","renderedMatches","_renderMatches","Provider","navigationType","DefaultErrorComponent","_state$errors","useDataRouterState","UseRouteError","useRouteError","lightgrey","preStyles","padding","backgroundColor","style","fontStyle","defaultErrorElement","RenderErrorBoundary","_React$Component","props","_this","errorInfo","routeContext","component","RenderedRoute","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState2","_dataRouterState","errorIndex","min","reduceRight","getChildren","Component","element","hookName","ctx","useRouteContext","thisRoute","AwaitRenderStatus","startTransitionImpl","RouterProvider","fallbackElement","_React$useState3","_React$useState4","setStateImpl","v7_startTransition","setState","Router","DataRoutes","Outlet","useOutlet","_ref5","_ref5$basename","basenameProp","_ref5$children","locationProp","_ref5$navigationType","_ref5$static","staticProp","navigationContext","_locationProp","_locationProp$pathnam","_locationProp$search","_locationProp$hash","_locationProp$state","_locationProp$key","locationContext","trailingPathname","neverSettledPromise","updates","_arrayLikeToArray","len","arr2","_arrayWithHoles","asyncGeneratorStep","gen","resolve","_next","_throw","info","self","Constructor","_defineProperties","descriptor","defineProperty","protoProps","staticProps","_possibleConstructorReturn","ReferenceError","Derived","hasNativeReflectConstruct","Super","NewTarget","obj","_getPrototypeOf","__proto__","subClass","superClass","_isNativeReflectConstruct","sham","Proxy","valueOf","_nonIterableRest","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread2","source","getOwnPropertyDescriptors","defineProperties","exports","Op","hasOwn","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","record","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","_sent","dispatchException","methodName","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","awrap","async","skipTempReset","rootRecord","rval","exception","loc","caught","hasCatch","hasFinally","finallyEntry","complete","thrown","_setPrototypeOf","p","_s","_x","_r","_arr","_n","_d","_toPropertyKey","input","hint","prim","toPrimitive","res","Number","_typeof","_unsupportedIterableToArray","minLen","thisArg","cache","kindOf","thing","str","kindOfTest","typeOfTest","isUndefined","isArrayBuffer","isString","isFunction","isNumber","isObject","isPlainObject","isDate","isFile","isBlob","isFileList","isURLSearchParams","l","_ref$allOwnKeys","allOwnKeys","getOwnPropertyNames","findKey","_key","_global","globalThis","global","isContextDefined","TypedArray","isTypedArray","Uint8Array","isHTMLForm","prop","isRegExp","reduceDescriptors","reducer","descriptors","reducedDescriptors","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","isAsyncFn","isBuffer","isFormData","kind","isArrayBufferView","ArrayBuffer","isView","buffer","isBoolean","isStream","pipe","merge","caseless","assignValue","targetKey","extend","trim","stripBOM","content","charCodeAt","inherits","superConstructor","toFlatObject","sourceObj","destObj","propFilter","merged","searchString","position","lastIndex","toArray","forEachEntry","pair","matchAll","regExp","exec","hasOwnProp","freezeMethods","toObjectSet","arrayOrString","delimiter","toCamelCase","p1","p2","noop","toFiniteNumber","defaultValue","isFinite","generateString","alphabet","isSpecCompliantForm","toJSONObject","visit","reducedValue","isThenable","catch","AxiosError","code","config","captureStackTrace","utils","toJSON","description","number","fileName","lineNumber","columnNumber","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","dots","token","predicates","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","toISOString","Buffer","isFlatArray","el","exposedHelpers","build","encode","charMap","encodeURIComponent","AxiosURLSearchParams","_pairs","toFormData","encoder","_encode","buildURL","serializedParams","serializeFn","serialize","hashmarkIndex","InterceptorManager","handlers","fulfilled","rejected","synchronous","runWhen","h","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","classes","isStandardBrowserEnv","product","isStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","protocols","buildPath","isNumericKey","isLast","arrayToObject","parsePropPath","DEFAULT_CONTENT_TYPE","defaults","transitional","transitionalDefaults","adapter","transformRequest","getContentType","hasJSONContentType","isObjectPayload","formDataToJSON","setContentType","platform","helpers","isNode","toURLEncodedForm","formSerializer","_FormData","env","rawValue","parser","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","ignoreDuplicateOf","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","_Symbol$iterator","_Symbol$toStringTag","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","rawHeaders","parsed","line","substring","parseHeaders","tokens","tokensRE","parseTokens","deleted","deleteHeader","format","normalized","w","formatHeader","_this$constructor","_len","targets","asStrings","computed","_len2","_key2","accessors","defineAccessor","accessorName","arg1","arg2","arg3","buildAccessors","accessor","transformData","fns","normalize","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","write","expires","domain","secure","cookie","Date","toGMTString","read","remove","now","buildFullPath","baseURL","requestedURL","relativeURL","combineURLs","originURL","msie","userAgent","urlParsingNode","resolveURL","setAttribute","host","hostname","port","requestURL","samplesCount","firstSampleTS","bytes","timestamps","head","tail","chunkLength","startedAt","bytesCount","passed","round","progressEventReducer","isDownloadStream","bytesNotified","_speedometer","speedometer","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","knownAdapters","http","xhr","XMLHttpRequest","onCanceled","requestData","requestHeaders","cancelToken","unsubscribe","auth","username","password","unescape","btoa","fullPath","onloadend","responseHeaders","getAllResponseHeaders","ERR_BAD_REQUEST","floor","settle","responseText","open","paramsSerializer","onreadystatechange","readyState","responseURL","setTimeout","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","xsrfValue","withCredentials","isURLSameOrigin","cookies","setRequestHeader","onDownloadProgress","onUploadProgress","upload","parseProtocol","send","adapters","nameOrAdapter","throwIfCancellationRequested","throwIfRequested","dispatchRequest","reason","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","timeoutMessage","decompress","beforeRedirect","transport","httpAgent","httpsAgent","socketPath","responseEncoding","configValue","VERSION","validators","deprecatedWarnings","validator","version","formatMessage","opt","ERR_DEPRECATED","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","Axios","instanceConfig","interceptors","configOrUrl","contextHeaders","_config","boolean","function","requestInterceptorChain","synchronousRequestInterceptors","interceptor","unshift","promise","responseInterceptorChain","chain","newConfig","onFulfilled","onRejected","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","splice","c","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","axios","createInstance","defaultConfig","Cancel","promises","spread","callback","isAxiosError","payload","formToJSON","default"],"sourceRoot":""}